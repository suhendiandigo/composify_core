[project]
name = "composify"
requires-python = ">=3.10"
classifiers = [
    "Programming Language :: Rust",
    "Programming Language :: Python :: Implementation :: CPython",
    "Programming Language :: Python :: Implementation :: PyPy",
]
dynamic = ["version"]

[dependency-groups]
dev = [
    "maturin>=1.9.3",
    "pre-commit>=4.3.0",
    "pytest>=8.4.1",
    "pytest-asyncio-cooperative>=0.40.0",
]

[build-system]
requires = ["maturin>=1.9.3,<2.0"]
build-backend = "maturin"

[tool.maturin]
module-name = "composify.core"
features = ["pyo3/extension-module"]

[tool.pytest.ini_options]
pythonpath = [
    ".",
    "tests",
]
testpaths = [
    "tests/unit",
    "tests/integration",
]

[tool.coverage.run]
source = ['composify']
branch = true
relative_files = true
context = '${CONTEXT}'

[tool.coverage.report]
precision = 2

exclude_lines = [
    'pragma: no cover',
    'raise NotImplementedError',
    'if TYPE_CHECKING:',
    'if typing.TYPE_CHECKING:',
    '@overload',
    '@typing.overload',
    '\(Protocol\):$',
    'typing.assert_never',
    'assert_never',
]

[tool.flake8]
max-line-length = 80
extend-select = "B950"
extend-ignore = "E203,E701"
exclude = [
    ".git",
    "__pycache__",
    "build",
    "dist"
]
[tool.ruff]
line-length = 80
target-version = 'py310'

[tool.ruff.lint]
select = [
    'F',      # Pyflakes
    'E',      # pycodestyle (Error)
    'I',      # isort
    'D',      # pydocstyle
    'UP',     # pyupgrade
    'YTT',    # flake8-2020
    'B',      # flake8-bugbear
    'T10',    # flake8-debugger
    'T20',    # flake8-print
    'C4',     # flake8-comprehensions
    'PYI006', # flake8-pyi
]
ignore = ['D105', 'D107', 'D205', 'D415', 'E203', 'E501', 'E701', 'B011', 'B028', 'B904']
flake8-quotes = {inline-quotes = 'double', multiline-quotes = 'double'}
isort = { known-first-party = ['composify', 'tests'] }
pydocstyle = { convention = 'google' }

[tool.ruff.lint.per-file-ignores]
'tests/*' = ['D', 'B', 'C4']
'composify/__init__.py' = ['F821', "F405"]
'composify/**/*.pyi' = ['F821']

[tool.ruff.format]
quote-style = 'double'

[tool.pycln]
includes = [
    "composify/**/*.py",
    "tests/**/*.py",
]
