from collections.abc import Iterable
from typing import Any

class MetadataSet:
    def __new__(items: Iterable[Any]): ...
    def __hash__(self): ...
    def __getitem__(self, key: type) -> T: ...
    def get(self, key: type) -> T | None: ...
    def issuperset(self, other: MetadataSet) -> bool: ...
    def issubset(self, other: MetadataSet) -> bool: ...

class Qualifiers:
    def __new__(items: Iterable[Any]): ...
    def __hash__(self): ...
    def __repr__(self): ...
    def qualify(self, attributes: MetadataSet) -> bool: ...
